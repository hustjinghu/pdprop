#!/bin/bash
# Allcompile   Script to compile all the programs in CleanPdprop.
#           After a new download the user will probably need to compile all 
#           the fortran etc programs.   This routine uses gfortran (in gcc)
#           It also makes  the scripts executable using  "chmod". Some systems
#           do not give normal users chmod privaledges. Talk to admin.
# Usage:     ./Allcompile    
#       Note that "Allcompile" needs to be executable.  If it is not you
#       must issue the command:    chmod 744 Allcompile
#
#  Copyright (C) 2013  A. Conle
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the license, or (at
# your option) any later version.
#  This  file is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTA-
# BILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#  You should have received a copy of the GNU General PUblic License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place -Suite 330, Boston, MA 02111-1307, USA. Try also their
# web site: http://www.gnu.org/copyleft/gpl.html

TMP2=/tmp/temp222.$$
#dadn=temp.dadn

#alias ls     "ls -lt | head -12"
#alias lstl   "ls -lt | head -30"

echo
echo
echo "#--------------------   Allcompile  --------------------------------------------"
echo 
echo "#This bash command script helps the user prepare/compile the program files."
echo "#         (You should only have to do this after a download.)"
echo "#          Each file's compile command can be seen with:   head filename"
echo
pwd
echo "# File: convert2Mpa_mm.f  ..."
gfortran -g -w -fbounds-check convert2MPa_mm.f -o convert2MPa_mm
echo "# File: convertParis2table.f ..."
gfortran -g -w -fbounds-check convertParis2table.f -o convertParis2table
echo "# File: decimate.f ..."
gfortran  -g -w -fbounds-check decimate.f  -o decimate
echo "# File: delete1arg.f ..."
gfortran  -g -w -fbounds-check delete1arg.f  -o delete1arg
echo "# File: hilo2.f ..."
gfortran  -g -w -fbounds-check hilo2.f  -o hilo2
echo "# File: pdrain.f ..."
gfortran  -g -w -fbounds-check pdrain.f  -o pdrain
echo "# File: replaceline.f ..."
gfortran  -g -w -fbounds-check replaceline.f  -o replaceline
echo "# File: saefcalc2.f ..."
gfortran -g -w -fbounds-check saefcalc2.f  -o saefcalc2
echo
echo


echo "# Moving to folder PlateSurfFlaw:   cd PlateSurfFlaw"
cd PlateSurfFlaw
pwd
echo "# Make scripts executable:"
echo "# chmod 744 setup1 setup1.bak makereport1 makereport1.bak makeInitReport ... "
chmod 744 setup1 setup1.bak  makereport1 makereport1.bak makeInitReport
echo
echo "# Compile programs..."
echo "# File:   plateWeldflaw.f ..."
gfortran  -g -w -fbounds-check plateWeldflaw.f  -o plateWeldflaw
echo "#  cd WeldSurfFlaw/"
cd WeldSurfFlaw/
pwd
echo "# File:   getMk_w00.f ..."
gfortran -g -w -fbounds-check getMk_w00.f  -o getMk_w00
echo "# File:   getMk_w90.f ..."
gfortran -g -w -fbounds-check getMk_w90.f  -o getMk_w90
echo
echo

echo "# Moving to folder PlateLongSurfFlaw:   cd ../../PlateLongSurfFlaw "
cd ../../PlateLongSurfFlaw
pwd
echo "# Make scripts executable:"
echo "# chmod 744 setup2 setup2.bak makereport2 makereport2.bak ... "
chmod 744 setup2 setup2.bak  makereport2 makereport2.bak
echo
echo "# Compile programs..."
echo "# File:   plateLongSurfFlaw.f ..."
gfortran  -g -w -fbounds-check plateLongSurfFlaw.f  -o plateLongSurfFlaw
echo
echo


echo "# Moving to folder PipeInSurfFlaw:  cd ../PipeInSurfFlaw"
cd ../PipeInSurfFlaw
pwd
echo "# Make scripts executable:"
echo "# chmod 744 setup3 setup3.bak makereport3 makereport3.bak ... "
chmod 744 setup3 setup3.bak  makereport3 makereport3.bak
echo
echo "# Compile programs..."
echo "# File:   pipeIntSurfFlaw.f ..."
gfortran  -g -w -fbounds-check pipeIntSurfFlaw.f  -o pipeIntSurfFlaw
echo
echo
echo "# Compiles are done.  If you add new Functions or Subroutines to the"
echo "# programs,  be sure to put a "SAVE" command at top of each.  New"
echo "# gfortran compilers require this to save variables between calls."
echo

exit

# code check not used:
#    if [ -s "$file" ]; then
#            echo " $file exists and has a size greater than zero."
#    else
#            echo " $file not found. Check pdprop.env for correct filename."
#            exit 1
#    fi
